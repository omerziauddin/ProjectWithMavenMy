<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-configuration SYSTEM 
"http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd">
<!-- if hibernate.cfg file not read then error could not locate cfg.xml 
Could not locate cfg.xml resource [hibernate.cfg.xml]
solution The hibernate.cfg.xml file should be moved to src folder.
or put full path in cfg.configure com/tut/hibernate.cfg.xml if file is in com.tut 
package-->
<hibernate-configuration>
 <session-factory>
		<property name="connection.driver_class">com.mysql.jdbc.Driver</property>
		<property name="connection.url">jdbc:mysql://localhost:3306/myhiber</property>
		<property name="connection.username">root</property>
		<property name="connection.password">oracle</property>
		<property name="dialect">org.hibernate.dialect.MySQL8Dialect</property>
		<!-- dialect 5 lenge to kuch ni hoga -->
		<!-- each time table will be creted deleted if we use
		<property name="hbm2ddl.auto">create</property>   hence we use update
		i want hibernate automatically create table and we do not have to do that we only telll mapping of classes anto tables
		rest hibernate do us hbm2ddl it contains crud update command only create table if its not in db for testing use create-->
		
		<property name="hbm2ddl.auto">update</property>   <!-- if we r not using this property 
		then we hv to manually create tables in db if create previous table delete and new created
		everytime-->
		
		<!-- hibernate will show ehich query it is firing in db from below command -->
		<property name="show_sql">true</property>
		
		<property name="format_sql">true</property>
		
		
		<!-- for hibernate second level caching -->
		<property name="cache.use_second_level_cache">true</property>
		<property name="cache.region.factory_class">org.hibernate.cache.ehcache.internal.EhcacheRegionFactory</property>
        
        <!-- to tell hibernate to map class Student to table student no of mapping
        tags are equal to no of entity class-->
        <mapping class="com.tut.Student"/>
        <mapping class="com.tut.Address"/>
        <mapping class="com.map.Question"/>
        <mapping class="com.map.Answer"/>
        <mapping class="com.map1.Emp"/>
        <mapping class="com.map1.Project"/>
        
	</session-factory>


</hibernate-configuration>












